@model Website.ViewModels.RunsViewModel

@{
    ViewData["Title"] = "Runs";
}

@section Styles {
    <style>
        :root {
            --primary-color: #FF6B00;
            --secondary-color: #1C2C5B;
            --accent-color: #3BACB6;
            --light-color: #F8F9FA;
            --dark-color: #212529;
        }

        .dashboard-header {
            background: linear-gradient(135deg, var(--secondary-color) 0%, #0b1733 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }

        .client-card {
            border-radius: 15px;
            transition: all 0.3s ease;
            border: none;
            height: 100%;
        }

            .client-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            }

        .client-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 1rem;
            background-color: var(--secondary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .status-badge {
            border-radius: 20px;
            padding: 0.25rem 0.75rem;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .search-box {
            border-radius: 50px;
            padding-left: 1rem;
            border: 1px solid #e9ecef;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }

            .search-box:focus {
                box-shadow: 0 0 0 0.25rem rgba(255, 107, 0, 0.25);
                border-color: #FF6B00;
            }

        .search-btn {
            border-radius: 0 50px 50px 0;
            background-color: #FF6B00;
            color: white;
            border: none;
        }

        .filter-dropdown {
            border-radius: 50px;
            padding: 0.375rem 1rem;
        }

        .modal-content {
            border-radius: 15px;
            overflow: hidden;
        }

        .modal-header {
            background-color: var(--secondary-color);
            color: white;
            border-bottom: none;
        }

        .modal-footer {
            border-top: none;
        }
    </style>
}

<div class="container mt-4">
    <h1>Runs</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <input type="text" class="form-control" placeholder="Search runs..." value="@Model.SearchTerm">
        </div>
        <div class="col-md-4">
            <select class="form-select">
                <option selected>All Runs</option>
                <option>Upcoming Runs</option>
                <option>Past Runs</option>
            </select>
        </div>
        <div class="col-md-2">
            <button class="btn btn-orange w-100">
                <i class="bi bi-plus-circle me-2"></i>Create Run
            </button>
        </div>
    </div>

    <div class="row">
        @if (Model?.Runs != null && Model.Runs.Any())
        {
            foreach (var run in Model.Runs)
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@run.Name</h5>
                            <p class="card-text">@run.Description</p>
                            <p><strong>Date:</strong> @run.RunTime?</p>
                            <p><strong>Location:</strong> @run.Address</p>
                           @*  <p><strong>Host:</strong> @run.HostName</p>
                            <div class="d-flex justify-content-between">
                                <span>@run.CurrentParticipants / @run.MaxParticipants participants</span>
                                <div>
                                    <button class="btn btn-sm btn-outline-secondary me-2">View</button>
                                    <button class="btn btn-sm btn-orange">Join</button>
                                </div>
                            </div> *@
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center py-5">
                <h3>No runs found</h3>
                <p>There are no runs available at the moment.</p>
            </div>
        }
    </div>

    @if (Model?.HasNextPage == true)
    {
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Runs pagination">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Run", new { cursor = Model.NextCursor, direction = "next", limit = Model.PageSize, sortBy = Model.CurrentSortBy })">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>